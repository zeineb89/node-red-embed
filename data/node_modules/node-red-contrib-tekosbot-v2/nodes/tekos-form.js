module.exports = function(RED) {
  "use strict";

  function GetFormContent(config) {
    var node = this;
    RED.nodes.createNode(node, config);

    var option = config.options;
    var inputs = [];
    for (var i = 0; i < option.length; i++) {
      //console.log("option.type *********************************")

      //    console.log(option[i])
      //  console.log(option[i].required)

      if (option[i].type === "list") {
        var liste = option[i].list;
        var listeSplit = liste.split(",");
        var ListOptions = [];
        for (var j = 0; j < listeSplit.length; j++) {
          let val = listeSplit[j].split(":")[0];
          let lab = listeSplit[j].split(":")[1] || val;
          ListOptions.push({ value: val, label: lab });
        }
      }

      if (option[i].subtype === "date") {
        var date = option[i].value.split("T")[0];
        option[i].value = date;
      } else if (option[i].subtype === "datetime") {
        var date = option[i].value.split("T")[0];
        var time = option[i].value.split("T")[1].split(".")[0];
        option[i].value = { date: date, time: time };
      }

      switch (option[i].type) {
        case "text":
        case "number":
        case "textarea":
        case "tel":
        case "url":
        case "email":
        case "editor":
        case "password": {
          inputs.push({
            type: "input",
            subtype: option[i].type,
            label: option[i].label,
            name: option[i].value
          });
          break;
        }
        /*      case "checkbox": {
          inputs.push({
            type: option[i].type,
            label: option[i].label,
            name: option[i].value,
            default: false
          });
          break;
        }
        case "datetime": {
          inputs.push({
            type: option[i].type,
            subtype: option[i].type,
            label: option[i].label,
            name: option[i].value
          });
          break;
        }
        case "date": {
          inputs.push({
            type: "datetime",
            subtype: "date",
            label: option[i].label,
            name: option[i].value
          });
          break;
        }
        case "switch": {
          inputs.push({
            type: "toggle",
            subtype: "toggle",
            label: option[i].label,
            name: option[i].value
          });
          break;
        } */
        case "list": {
          inputs.push({
            type: "select",
            subtype: "select",
            label: option[i].label,
            name: option[i].value,
            options: ListOptions
          });
        }
      }
    }
    // var listeners = config.listen.split("/")
    // var action = listeners[listeners.length-1]
    // var listen =''
    // for (let j=0 ; j<listeners.length-1; j++){
    //     listen = listen+listeners[j]
    //     if(j<listeners.length-2){
    //       listen = listen+'/'
    //     }
    // }
    var id = Math.random()
      .toString(36)
      .substring(7);
    var form = {
      id: config.formId,
      title: config.title,
      message: config.action,
      cancel: config.cancel,
      posturl: config.posturl,
      listen: "chat/formId",
      action: config.formId,
      subtitle: config.subtitle,
      inputs: JSON.parse(JSON.stringify(inputs))
      // [
      // {
      //   "type": 'input',
      //   "subtype": "email", //text, textarea, email, tel, file, number, password and url
      //   "label": 'Email',
      //   "name": 'email',
      // },
      // {
      //   "type": 'checkbox',
      //   "label": 'Check box 2',
      //   "name": 'reply_checkbox2',
      //   'default': true
      // },
      // {
      //   "type": 'datetime',
      //   "subtype": 'datetime',
      //   "label": 'Select date & time',
      //   "name": 'reply_datetime',
      // },
      // {
      //   "type": 'chips-input',
      //   "label": 'Ajouter des noms',
      //   "name": 'reply_chipinputs',
      // },
      // {
      //   "type": 'rating',
      //   "max": 5,
      //   "size": "2rem",
      //   "extra_label": 'Rating',
      //   "name": 'reply_rating',
      // },
      // {
      //   "type": 'range', //or slide
      //   "min": 0,
      //   "max": 50,
      //   "label": true,
      //   "extra_label": "Select Range",
      //   "name": 'reply_range',
      // },
      // {
      //   "type": 'select',
      //   "subtype": 'select',
      //   "label": 'Select Many labels',
      //   "multiple": true,
      //   "name": 'reply_selectmulti',
      //   "options": [
      //     {"value": "value1", "label": "label 1"},
      //     {"value": "value2", "label": "label 2"},
      //     {"value": "value3", "label": "label 3"}
      //   ]
      // },
      // {
      //   "type": 'select',
      //   "subtype": 'select',
      //   "label": 'Select One label',
      //   "name": 'reply_select',
      //   "options": [
      //     {"value": "value1", "label": "label 1"},
      //     {"value": "value2", "label": "label 2"},
      //     {"value": "value3", "label": "label 3"}
      //   ]
      // },
      // {
      //   "type": 'option-group',
      //   "subtype": 'toggle', // toggle , radio , checkbox
      //   "label": 'Select Quick reply',
      //   "extra_label": "Choix de label",
      //   "name": 'reply_optiongroup',
      //   "options": [
      //     {"value": "value1", "label": "label 1"},
      //     {"value": "value2", "label": "label 2"},
      //     {"value": "value3", "label": "label 3"}
      //   ]
      // }
      // ]
    };

    node.on("input", function(msg) {
      msg.payload = {
        type: "form",
        form: form,
        form_data: msg.formData || {}
      };

      node.send(msg);
    });
  }

  RED.nodes.registerType("form", GetFormContent);
};
