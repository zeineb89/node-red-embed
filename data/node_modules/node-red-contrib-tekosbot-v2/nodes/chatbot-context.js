var mustache = require("mustache");

Object.byString = function(o, s) {
    s = s.replace(/\[(\w+)\]/g, '.$1'); // convert indexes to properties
    s = s.replace(/^\./, '');           // strip a leading dot
    var a = s.split('.');
    for (var i = 0, n = a.length; i < n; ++i) {
        var k = a[i];
        if (k in o) {
            o = o[k];
        } else {
            return;
        }
    }
    return o;
}


module.exports = function(RED) {

  function ChatBotContext(config) {
    RED.nodes.createNode(this, config);
    var node = this;
    this.property = config.property;
    this.operation = config.operation;
    this.text = config.text;
    this.variable = config.variable;



    this.on('input', function(msg) {

      let property = node.property;
      let operation = node.operation;
      let text = node.text;
      let variable = node.variable;

      if(!property && !msg[property]){
        node.error("Property not found")
        return;
      }
      let msgProperty = msg[property].replace(/\./g,'_')
      let globalContext = this.context().global 

      // save based on the property
      if(operation == "set"){
        // save in global context
        let obj;
        if(text.includes("{{")){
          text = text.replace('{{','').replace('}}','')
          obj = Object.byString(msg, text)
        }

        globalContext.set(variable+"-"+msgProperty,obj)
      }

      if(operation == 'get'){
        let result = globalContext.get(variable+"-"+msgProperty)
        msg.payload = result;
      }
      node.send(msg)

    });

  }

  RED.nodes.registerType('chatbot-context', ChatBotContext);
};
